!function(e){"use strict";function s(e,s){return(" "+e.className+" ").indexOf(" "+s+" ")>-1}function t(e,s){for(var t in s)s.hasOwnProperty(t)&&(e[t]=s[t])}function n(e){this.settings={navId:"nav",classPrefix:"nav",beforeOpen:function(e,s){e()},afterOpen:function(){},onOpenError:function(e){},beforeClose:function(e,s){e()},afterClose:function(){},onCloseError:function(e){}},t(this.settings,e||{}),this.nav=document.getElementById(this.settings.navId),this.navToggle=this.nav.getElementsByClassName(this.settings.classPrefix+"-toggle")[0],this.body=document.getElementsByTagName("body")[0]}n.prototype.close=function(){this.settings.beforeClose(function(){this.nav.className=this.nav.className.replace(" "+this.settings.classPrefix+"-open",""),this.body.className=this.body.className.replace(" "+this.settings.classPrefix+"-open",""),this.settings.afterClose()}.bind(this),function(e){this.settings.onCloseError(e)}.bind(this))},n.prototype.open=function(){this.settings.beforeOpen(function(){this.nav.className=this.nav.className.replace(" "+this.settings.classPrefix+"-open",""),this.body.className=this.body.className.replace(" "+this.settings.classPrefix+"-open",""),this.nav.className+=" "+this.settings.classPrefix+"-open",this.body.className+=" "+this.settings.classPrefix+"-open",this.settings.afterOpen()}.bind(this),function(e){this.settings.onOpenError(e)}.bind(this))},n.prototype.getOnClick=function(){var e=this,t=function(t){t.preventDefault(),s(nav,e.settings.classPrefix+"-open")?e.close():e.open()};return t},n.prototype.enable=function(){this.onClick=this.getOnClick(),this.navToggle.addEventListener("click",this.onClick)},n.prototype.disable=function(){this._close(),this.navToggle.removeEventListener("click",this.onClick)},"function"==typeof define&&define.amd?define(n):"undefined"!=typeof module&&module.exports?module.exports=n:e.Nav=n}(this);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
